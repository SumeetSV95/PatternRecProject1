import pickle
from sklearn import svm
import numpy as np


def getmaxProb(classifier, samples,n):
  
    probabilities = classifier.predict_proba(samples)
    classes = classifier.classes_
    selected_classes = set()
    selected_classes_list = []
    top_classes = []
    for k in range(len(probabilities)):
      selected_classes = set()
      selected_classes_list = []
      for i in range(n):
        max_prob= float('-inf')
        index = -1
        for j in range(len(probabilities[k])):
          if probabilities[k][j]>max_prob and classes[j] not in selected_classes:
            max_prob = probabilities[k][j]
            index = j
        if (len(classes[index])>1 and classes[index]!='COMMA') or classes[index]=='{' or classes[index]=='}':
          selected_classes_list.append("\\"+classes[index])
        else:
          selected_classes_list.append(classes[index])
        selected_classes.add(classes[index])
      top_classes.append(selected_classes_list)
    
        
    return top_classes


with open('/content/testFeatureFile_70dpi_f1296','rb') as fp:
  data = pickle.load(fp)

with open('/content/SVM_Model','rb') as fp:
    classifier = pickle.load(fp)
features = data[1]
filenames = data[0]
classee = data[2]

train_features = []
for i in range(len(features)):
  train_features.append(features[i][0])

features = np.asarray(train_features)

print(len(features))
print(len(features[0]))


with open('test_data_predictions_dpi_f576_svm_ovr_rbf_removedErrors','w') as fp:
  predicted_classes = getmaxProb(classifier, features,10)
  for i in range(len(features)):
    fp.write(filenames[i]+",")
    fp.write(",".join(predicted_classes[i])+'\n')

